"""–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."""

from aiogram import F
from aiogram.enums import ParseMode
from aiogram.types import Message, URLInputFile

from menu.menu_help import get_text
from services.ya_disk import YaDisk
from src import form_router
from src.menu.text_menu import menu_useful_information

ya_disk = YaDisk()


@form_router.message(F.text == menu_useful_information["for_new_gamers"])
async def for_new_gamers(message: Message) -> None:
    """–î–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤."""
    await message.answer_document(
        document=await ya_disk.get_link_on_files(
            "/help/manual_for_new_gamers.pdf"
        )
    )
    text = await get_text("For_new_gamers")
    await message.answer(text, parse_mode=ParseMode.MARKDOWN_V2)


@form_router.message(
    F.text == menu_useful_information["how_to_log_in_to_the_game"]
)
async def how_to_log_in_to_the_game(message: Message) -> None:
    """–ö–∞–∫ –∑–∞–π—Ç–∏ –≤ –∏–≥—Ä—É, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏."""
    await message.answer(
        "https://telegra.ph/Kak-zajti-v-igru-esli-po-kakim-to-prichinam-ne-poluchaetsya-zajti-07-22-3",
    )


@form_router.message(
    F.text == menu_useful_information["who_to_download_at_the_beginning"]
)
async def who_to_download_at_the_beginning(message: Message) -> None:
    """–ö–æ–≥–æ –∫–∞—á–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ."""
    await message.answer(
        "–ü–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É zOrg –Ω–∞–ø–∏—Å–∞–ª [—Å—Ç–∞—Ç—å—é](https://telegra.ph/Nachalnyj-pak-11-17)\\, –≤–æ—Ç –¥–µ—Ä–∂–∏\\!\\)",
        ParseMode.MARKDOWN_V2,
    )


@form_router.message(
    F.text == menu_useful_information["necessary_heroes_for_events"]
)
async def necessary_heroes_for_events(message: Message) -> None:
    """–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥–µ—Ä–æ–∏ –¥–ª—è –∏–≤–µ–Ω—Ç–æ–≤."""
    file_name = {
        "ivent.jpg": "–í—Å–µ –≥–µ—Ä–æ–∏ –∏–∑ —Å–æ–±—ã—Ç–∏–π.",
        "Sandariel-Event.png": "–°–∞–Ω–¥–∞—Ä–∏—ç–ª—å.",
        "Magnus-Event_Pass.png": "–ú–∞–≥–Ω—É—Å.",
        "Balthazar-Event.png": "–ë–∞–ª—å—Ç–∞–∑–∞—Ä.",
        "Gobliana-Event.png": "–ì–æ–±–ª—É—à–∫–∞.",
        "zigfrid.jpg": "–ó–∏–≥—Ñ—Ä–∏–¥.",
        "Daghan.jpg": "–î–∞'–ì–∞–Ω–∞.",
        "ivent_AOM.jpg": "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–∞–π–¥ –æ—Ç Pulcho.",
        "Infographic_Events-1.png": "–ì–∞–π–¥ –ø–æ —Å–æ–±—ã—Ç–∏—è–º.",
    }
    for name in file_name.keys():
        await message.answer_photo(
            photo=await ya_disk.get_link_on_files(
                f"/help/necessary_heroes_for_events/{name}"
            ),
            caption=file_name[name],
        )


@form_router.message(F.text == menu_useful_information["useful_links"])
async def useful_links(message: Message) -> None:
    """–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏."""
    text = await get_text("useful_links")
    await message.answer(text, ParseMode.MARKDOWN_V2)


@form_router.message(F.text == menu_useful_information["instructions_for_kv"])
async def instructions_for_kv(message: Message) -> None:
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ö–í."""
    text1 = await get_text("kv1")
    text2 = await get_text("kv2")
    await message.answer(text1)
    await message.answer_photo(
        photo=await ya_disk.get_link_on_files("/help/kv.jpg"),
    )
    await message.answer(text2)


@form_router.message(
    F.text == menu_useful_information["instructions_aptechkam_kv"]
)
async def instructions_aptechkam_kv(message: Message) -> None:
    """–ì–∞–π–¥ –ø–æ –∞–ø—Ç–µ—á–∫–∞–º –≤ –ö–í."""
    await message.answer_document(
        URLInputFile(
            await ya_disk.get_link_on_files("/help/Manual_KV.pdf"),
            filename="Manual_KV.pdf",
        )
    )


@form_router.message(
    F.text == menu_useful_information["packs_and_counterattacks"]
)
async def packs_and_counterattacks(message: Message) -> None:
    """–ü–∞–∫–∏ –∏ –∫–æ–Ω—Ç—Ä–ø–∞–∫–∏."""
    for num_img in range(1, 4):
        await message.answer_photo(
            photo=await ya_disk.get_link_on_files(
                f"/help/pak_and_counterpak{num_img}.jpg"
            )
        )


@form_router.message(F.text == menu_useful_information["three_star_trials"])
async def three_star_trials(message: Message) -> None:
    """–ò—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ 3*."""
    await message.answer_document(
        URLInputFile(
            await ya_disk.get_link_on_files("/help/recent_trials.pdf"),
            filename="recent_trials.pdf",
        )
    )


@form_router.message(F.text == menu_useful_information["schemes_of_all_raids"])
async def schemes_of_all_raids(message: Message) -> None:
    """–°—Ö–µ–º—ã –≤—Å–µ—Ö —Ä–µ–π–¥–æ–≤."""
    await message.answer(
        "[–°—Ö–µ–º—ã –≤—Å–µ—Ö —Ä–µ–π–¥–æ–≤](https://drive.google.com/folderview?id=1-9P7YK6He09vgheEQd4rK5zf-H5QXDFi)\n\n[–°—Ö–µ–º—ã –≤—Å–µ—Ö —Ä–µ–π–¥–æ–≤ –æ—Ç üî• Li \\[–§–µ–Ω–∏–∫—Å\\]](https://telegra.ph/Shemy-rejdov-05-19)",
        ParseMode.MARKDOWN_V2,
    )


@form_router.message(
    F.text == menu_useful_information["schedule_of_clan_tasks"]
)
async def schedule_of_clan_tasks(message: Message) -> None:
    """–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π."""
    await message.answer(await get_text("schedule_of_clan_tasks"))
