from aiogram.types import (
    FSInputFile,
    KeyboardButton,
    Message,
    ReplyKeyboardMarkup,
)

from migrations import db
from tables.heroes_of_users import HeroesOfUsers


async def send_message(
    message: Message, sms: str, reply_keyboard: list[list[KeyboardButton]]
) -> None:
    await message.answer(
        sms,
        reply_markup=ReplyKeyboardMarkup(
            keyboard=reply_keyboard,
            resize_keyboard=True,
            one_time_keyboard=False,
        ),
    )


async def setting_button(message: Message, sms: str) -> None:
    """–í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –ù–∞—Å—Ç—Ä–æ–µ–∫"""
    reply_keyboard = [
        [KeyboardButton(text="–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —Å –≥–µ—Ä–æ–µ–º")],
        [
            KeyboardButton(text="–ü–æ–¥–ø–∏—Å–∫–∏..."),
            KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è..."),
        ],
        [KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è")],
        [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
    ]
    await send_message(message, sms, reply_keyboard)


async def setting_hero_button(message: Message, user_id: int, sms: str) -> None:
    """–ú–∞–Ω–∞–ø—É–ª—è—Ü–∏–∏ —Å –≥–µ—Ä–æ–µ–º"""
    reply_keyboard = []
    num = await db.func.count(HeroesOfUsers.user_id == user_id).gino.scalar()
    #     pd.read_sql(
    #     f"SELECT COUNT(*) FROM heroes_of_users WHERE user_id = '{update.effective_chat.id}';",
    #     engine,
    # ))
    # num = int(info.loc[0, "count"])
    if num == 5:
        reply_keyboard += [
            [KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
        ]
    elif num == 1:
        reply_keyboard += [
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
        ]
    else:
        reply_keyboard += [
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è")],
            [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
        ]
    await send_message(message, sms, reply_keyboard)


async def subscription_button(
    message: Message, sms: str, id_hero: str
) -> None:
    """–ü–æ–¥–ø–∏—Å–∫–∏..."""

    subscription = HeroesOfUsers.query.where(
        HeroesOfUsers.id == id_hero
    ).first()
    # subscription = pd.read_sql(
    #     f"SELECT subscription_rock, subscription_energy, description_of_the_kz FROM heroes_of_users WHERE user_id = '{update.effective_chat.id}' AND id = '{id_hero}';",
    #     engine,
    # )
    reply_keyboard = []
    if subscription.subscription_rock:
        reply_keyboard += [
            [
                KeyboardButton(
                    text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏ –æ —Å–º–µ–Ω–µ –ö–ó –∑–∞ —á–∞—Å"
                )
            ]
        ]
    else:
        reply_keyboard += [
            [
                KeyboardButton(
                    text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –æ —Å–º–µ–Ω–µ –ö–ó –∑–∞ —á–∞—Å"
                )
            ]
        ]
    if subscription.subscription_energy:
        reply_keyboard += [
            [KeyboardButton(text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏ –ø–æ —Å–±–æ—Ä—É —ç–Ω–µ—Ä–≥–∏–∏")]
        ]
    else:
        reply_keyboard += [
            [
                KeyboardButton(
                    text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –ø–æ —Å–±–æ—Ä—É —ç–Ω–µ—Ä–≥–∏–∏"
                )
            ]
        ]
    if subscription.description_of_the_kz:
        reply_keyboard += [
            [KeyboardButton(text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ö–ó")]
        ]
    else:
        reply_keyboard += [
            [KeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ö–ó")]
        ]
    reply_keyboard += [[KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")]]
    await send_message(message, sms, reply_keyboard)


async def edit_time_button(message: Message, sms: str) -> None:
    """–ü–æ–º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è..."""
    reply_keyboard = [
        [KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è —Å–º–µ–Ω—ã –ö–ó")],
        [KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ —Å–±–æ—Ä–∞ —ç–Ω–µ—Ä–≥–∏–∏")],
        [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
    ]
    await send_message(message, sms, reply_keyboard)


async def new_button(message: Message, sms: str) -> None:
    """–í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫"""
    reply_keyboard = [
        [KeyboardButton(text="üÜò –ü–æ–º–æ—â—å üÜò")],
        [
            KeyboardButton(text="–°–∫–æ–ª—å–∫–æ —É –º–µ–Ω—è –∫–∞–º–Ω–µ–π?"),
            KeyboardButton(text="–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
        ],
        [KeyboardButton(text="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è‚öôÔ∏è")],
        [KeyboardButton(text="üíµ–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—éüí∏")],
    ]
    # TODO –±—É–¥—É—Ç –ª–∏ —É –Ω–∞—Å –ê–¥–º–∏–Ω—ã?
    # info = pd.read_sql(
    #     f"SELECT COUNT(*) FROM admins WHERE user_id = '{update.effective_chat.id}';",
    #     engine,
    # )
    # if info.loc[0, "count"] != 0:
    #     reply_keyboard += [[KeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–¥–º–∏–Ω–∞")]]
    await send_message(message, sms, reply_keyboard)


async def setting_admin_button(message: Message, sms: str) -> None:
    """–í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω–æ–≤—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    reply_keyboard = [
        [
            KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –∏–≥—Ä–æ–∫—É ‚úèÔ∏è‚úâÔ∏èüßç‚Äç‚ôÇÔ∏è"),
            KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏ üìù"),
            KeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ü§ñ"),
        ],
        [
            KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –í–°–ï–ú —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úèÔ∏è‚úâÔ∏èüë®‚Äçüë©‚Äçüëß‚Äçüë¶"),
            KeyboardButton(text="–£–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–ª–∞–Ω–∞‚ò†"),
        ],
        [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
    ]
    await send_message(message, sms, reply_keyboard)


async def helpMy_button(message: Message, sms: str) -> None:
    """–í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –ø–æ–º–æ—â–∏"""
    reply_keyboard = [
        [KeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é")],
        [KeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–µ–Ω—è –∫ —á–∞—Ç—É")],
        [KeyboardButton(text="–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–µ")],
        [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
    ]
    await send_message(message, sms, reply_keyboard)


async def help_button(message: Message, sms: str) -> None:
    """–í—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –ø–æ–º–æ—â–∏"""
    reply_keyboard = [
        [KeyboardButton(text="–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤")],
        [
            KeyboardButton(
                text="–ö–∞–∫ –∑–∞–π—Ç–∏ –≤ –∏–≥—Ä—É, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏"
            )
        ],
        [
            KeyboardButton(text="–ö–æ–≥–æ –∫–∞—á–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ"),
            KeyboardButton(
                text="–ö–æ–≥–æ –∫–∞—á–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ—Ä–æ–µ–≤ –∏–∑ —Å–æ–±—ã—Ç–∏–π?"
            ),
        ],
        [KeyboardButton(text="–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏")],
        [
            KeyboardButton(text="–ö–æ–≥–¥–∞ –ö–í?"),
            KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ö2, —Ö3 –∏ –¥–∞—Ç—ã –ö–í"),
        ],
        [
            KeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ö–í"),
            KeyboardButton(text="–ì–∞–π–¥ –ø–æ –∞–ø—Ç–µ—á–∫–∞–º –≤ –ö–í"),
        ],
        [
            KeyboardButton(text="–ü–∞–∫–∏ –∏ –∫–æ–Ω—Ç—Ä–ø–∞–∫–∏"),
            KeyboardButton(text="–ò—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ 3*"),
        ],
        [KeyboardButton(text="–°—Ö–µ–º—ã –≤—Å–µ—Ö —Ä–µ–π–¥–æ–≤")],
        [KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π")],
        [KeyboardButton(text="üîô–ù–∞–∑–∞–¥üîô")],
    ]
    await send_message(message, sms, reply_keyboard)


async def cancel_button(message: Message, sms: str) -> None:
    """–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã"""
    await send_message(message, sms, [[KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]])
