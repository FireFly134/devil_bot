variables:
   DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
   DOCKER_BUILDKIT: 1
before_script:
  - apk add --no-cache docker-compose

stages:
  - build
  - tests
  - production

build image:
  image:
    name: docker:latest
  stage: build
  tags:
    - docker
  only:
    - merge_requests
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi


tests:
  stage: tests
  tags:
    - docker
  needs:
    - build image
  only:
    - merge_requests
  script:
    - cp ${TEST_ENV} ./.env
    - docker-compose -f docker-compose.tests.yaml up --exit-code-from app-tests
  after_script:
    - docker container prune --force
    - docker image prune -a --force


deploy:production:
  tags:
    - docker
  stage: production
  when: manual
  only:
    - tags
  environment: production
  script:
    - cp ${PROD_ENV} ./.env
    - docker-compose -f docker-compose.prod.yaml down || true
    - docker-compose f docker-compose.prod.yaml pull
    - docker-compose f docker-compose.prod.yaml up --build -d
