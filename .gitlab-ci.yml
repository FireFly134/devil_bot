variables:
   DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
before_script:
  - apk add --no-cache docker-compose

stages:
  - build
#  - test
  - deploy

docker-build:
  image:
    name: docker:latest
  stage: build
  tags:
    - docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  after_script:
    - docker container prune --force
    - docker image prune -a --force
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - cat ${PROD_ENV} >> .env
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

#test-job:
#  stage: test
#  tags:
#    - docker
#  needs:
#    - docker-build
#  after_script:
#    - docker container prune --force
#    - docker image prune -a --force
#  script:
#    - docker run "$DOCKER_IMAGE_NAME" sh -c "make tests"

docker-deploy:
  tags:
    - docker
  stage: deploy
  only:
    - master
  environment: production
  script:
    - cat ${PROD_ENV} >> .env
    - docker-compose down || true
    - docker-compose pull
    - docker-compose up --build -d
